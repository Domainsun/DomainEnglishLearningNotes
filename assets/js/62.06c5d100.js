(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{370:function(t,a,s){"use strict";s.r(a);var r=s(14),d=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"屏幕适配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#屏幕适配"}},[t._v("#")]),t._v(" 屏幕适配")]),t._v(" "),a("h3",{attrs:{id:"预备知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预备知识"}},[t._v("#")]),t._v(" 预备知识")]),t._v(" "),a("h4",{attrs:{id:"dpi是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dpi是什么"}},[t._v("#")]),t._v(" dpi是什么")]),t._v(" "),a("p",[t._v("dpi是像素密度， 通过 像素/尺寸 得出。 也就是一英寸上有多少个像素。 在安卓中的dpi是以对角线的dpi为准。所以会出现宽高比例不同当dpi一致的情况。")]),t._v(" "),a("h4",{attrs:{id:"dp是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dp是什么"}},[t._v("#")]),t._v(" dp是什么")]),t._v(" "),a("p",[t._v("Android是安卓中的一个虚拟单位。 这个单位可以根据dpi换算成像素。在dpi160的设备上1dp=1px。")]),t._v(" "),a("h4",{attrs:{id:"为什么以160dpi为基准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么以160dpi为基准"}},[t._v("#")]),t._v(" 为什么以160dpi为基准")]),t._v(" "),a("p",[t._v("谷歌官方文档中对此说明：因为第一款Android设备（HTC的T-Mobile G1）dpi是160。")]),t._v(" "),a("h4",{attrs:{id:"dp解决了什么问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dp解决了什么问题"}},[t._v("#")]),t._v(" dp解决了什么问题")]),t._v(" "),a("p",[t._v("dp适配了在不同密度的设备上， 显示的物理尺寸一致。\n比如设置160dp，在任何设备上都是一英寸。 因为dp根据像素密度来换成成对应设备的像素。 在一英寸有160像素点的设备上，1dp就换成成1个像素， 320密度上，1dp就换算成2个像素。")]),t._v(" "),a("h4",{attrs:{id:"dp没解决什么问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dp没解决什么问题"}},[t._v("#")]),t._v(" dp没解决什么问题")]),t._v(" "),a("p",[t._v("既然dp在任何设备上1英寸就是1英寸， 那一个4英寸宽的按钮，就可能在5英寸宽的设备上显示有空余空间， 而在3英寸宽的设备显示不下。")]),t._v(" "),a("h3",{attrs:{id:"屏幕适配原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#屏幕适配原理"}},[t._v("#")]),t._v(" 屏幕适配原理")]),t._v(" "),a("p",[t._v("要让上面4英寸宽的按钮在3英寸和5英寸宽的设备上的显示效果和在4英寸宽的设备上的显示效果一样， 就要根据目标设备，去等比缩放。 比如在4英寸宽的设备图上的一个3英寸的按钮， 在8英寸宽的设备上， 就应该放大两倍变成6英寸去显示。这样根据目标设备去缩放，才能做到在任何设备上的显示效果都和设计图一致。")]),t._v(" "),a("h3",{attrs:{id:"屏幕适配具体实现方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#屏幕适配具体实现方案"}},[t._v("#")]),t._v(" 屏幕适配具体实现方案")]),t._v(" "),a("p",[t._v("实现有2种方式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("适配dp单位")])]),t._v(" "),a("li",[a("p",[t._v("适配pt单位")])])]),t._v(" "),a("blockquote",[a("p",[t._v("不管是适配dp单位， 还是适配pt单位， 原理都是等比缩放（目标设备的宽/设计设备的宽）倍。\ndp是根据DisplayMetrics类中density来缩放的， 所以更改这个值就行。 pt是DisplayMetrics类中xdpi。")])]),t._v(" "),a("h4",{attrs:{id:"dp方案的不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dp方案的不足"}},[t._v("#")]),t._v(" dp方案的不足")]),t._v(" "),a("p",[t._v("dp方式更改density后， 有可能会被其他地方更改导致被还原，比如打开webview的时候。 并且所有的使用dp的地方都会被修改大小。 不能做到单独适配。")]),t._v(" "),a("h4",{attrs:{id:"dp方案的改进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dp方案的改进"}},[t._v("#")]),t._v(" dp方案的改进")]),t._v(" "),a("p",[t._v("通过使用pt方式来适配， 更改xdpi的值之后不会被还原，因为view每次的在使用尺寸的时候都会调用getresource这个方法去获取这个值。 并且可以在想要适配的地方再使用这个单位适配， 其他要保留原来的dp方式的地方还用dp。")]),t._v(" "),a("h4",{attrs:{id:"pt方案的不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pt方案的不足"}},[t._v("#")]),t._v(" pt方案的不足")]),t._v(" "),a("p",[t._v("只能适配宽高一个维度的不足\n因为在布局中，宽高使用了同样的单位， 所以缩放是等比缩放。 等比缩放意味着只能适配一个维度。 以宽为标准适配的话，高就要自适应。 以高为标准的话， 宽就要自适应。")]),t._v(" "),a("h4",{attrs:{id:"pt方案的改进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pt方案的改进"}},[t._v("#")]),t._v(" pt方案的改进")]),t._v(" "),a("ol",[a("li",[t._v("以宽为适配标准， 高度自适应加滚动条。")]),t._v(" "),a("li",[t._v("通过两种单位， 来对宽高进行不同比例的适配。")])])])}),[],!1,null,null,null);a.default=d.exports}}]);