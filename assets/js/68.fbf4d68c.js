(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{376:function(t,a,n){"use strict";n.r(a);var s=n(14),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("一篇文章讲清楚Android中的MVC、MVP、MVVM架构 （附实现代码）")]),t._v(" "),a("h1",{attrs:{id:"_01-架构介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-架构介绍"}},[t._v("#")]),t._v(" 01 架构介绍")]),t._v(" "),a("p",[t._v("先来看一下MVC、MVP、MVVM的架构图。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yutian_9065/img/raw/master/img/202302061457193.png",alt:"image-20230206145755111"}})]),t._v(" "),a("p",[t._v("从这些架构图中，可以看到每种架构都有3个模块以及数据流动方向箭头。")]),t._v(" "),a("p",[a("strong",[t._v("模块")])]),t._v(" "),a("p",[t._v("在系统架构中，首先要做的就是把系统整体按照一定的原则划分成模块。")]),t._v(" "),a("p",[a("strong",[t._v("数据流动")])]),t._v(" "),a("p",[t._v("模块划分之后，模块之间的通信，就是数据的流动。在Android中，流动数据包括两部分，事件和数据。")]),t._v(" "),a("p",[a("strong",[t._v("架构")])]),t._v(" "),a("p",[t._v("模块和模块之间的数据通信方式构成不同的架构。在这3种架构中，都是把系统整体划分成了3个模块："),a("strong",[t._v("视图层，数据层，业务层。")]),t._v(" 他们之间的区别在于，模块之间的通信方式（数据流动方向）不一致。")]),t._v(" "),a("ul",[a("li",[t._v("MVC是视图层接收到事件后调用到业务层处理业务逻辑，业务层调用数据层处理数据，数据层再调用视图层更新页面。")]),t._v(" "),a("li",[t._v("MVP是视图层接收到事件后调用到业务层处理，业务层调用数据层处理数据，数据层处理数据后回调给业务层，业务层再回调给视图层更新页面。（数据层已不再持有视图层，他们之间通过业务层（Presenter）交互，具体使用接口实现，使数据层和视图层解耦。")]),t._v(" "),a("li",[t._v("MVVM在MVP的基础上实现了视图层和业务层的双向数据绑定（data binding），不再通过接口的方式交互，ViewModel不在和Presenter一样持有视图层，使视图层和业务层解耦。")])]),t._v(" "),a("h1",{attrs:{id:"_02-具体实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-具体实现"}},[t._v("#")]),t._v(" 02 具体实现")]),t._v(" "),a("h2",{attrs:{id:"mvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[t._v("#")]),t._v(" MVC")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yutian_9065/img/raw/master/img/202302061505418.png",alt:"image-20230206150541382"}})]),t._v(" "),a("p",[t._v("视图层：在MVC架构中， Android的xml布局文件和Activity/Fragment文件被划分为View视图层。 因为xml作为视图层功能太弱，只能够实现页面的布局，不能够实现页面数据和事件的处理。需要和Activity一起才能够构成一个完整的视图层。")]),t._v(" "),a("p",[t._v("业务层：大多数的MVC架构开发的安卓项目， 并没有把Controller业务层独立出来，而是将业务层也在Activity/Fragment中实现。这导致了Activity/Fragment的代码非常臃肿，这就是MVC的缺点之一。 在本例中，我们会将业务层独立出来，实现一个标准的MVC架构。")]),t._v(" "),a("p",[t._v("数据层：数据层Model指的是，数据管理模块，这包括了数据的获取，处理。存储等。 MVP、MVVM的架构中的Model也是一样。后面不再赘述。")]),t._v(" "),a("p",[a("strong",[t._v("代码结构")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yutian_9065/img/raw/master/img/202302061526151.png",alt:"image-20230206152617106"}})]),t._v(" "),a("p",[a("strong",[t._v("xml代码")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="utf-8"?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("LinearLayout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("android")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://schemas.android.com/apk/res/android"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@+id/ll_gallery_outer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("match_parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("match_parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("orientation")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("vertical"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TextView")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@+id/tv_result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("wrap_content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("wrap_content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_gravity")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("EditText")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@+id/tv_account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("match_parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("40dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_gravity")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_marginLeft")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("16dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_marginTop")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("20dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_marginRight")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("16dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("gravity")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("hint")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("输入用户名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("EditText")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@+id/tv_pwd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("match_parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("40dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_gravity")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_marginLeft")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("16dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_marginRight")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("16dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("gravity")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("hint")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("输入密码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Button")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("@+id/btn_login"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_width")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("match_parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_height")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("40dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_gravity")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_marginLeft")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("16dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("layout_marginRight")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("16dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("gravity")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("android:")]),t._v("text")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("登录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("LinearLayout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("Activity代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\npublic class MVCActivity extends AppCompatActivity {\n\n    TextView tvResult;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n         tvResult = findViewById(R.id.tv_result);\n        TextView tvAccount = findViewById(R.id.tv_account);\n        TextView tvPwd = findViewById(R.id.tv_pwd);\n        Button btnLogin = findViewById(R.id.btn_login);\n\n        MVCController mvcController = new MVCController();\n\n        btnLogin.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                mvcController.login(tvAccount.getText().toString(),tvPwd.getText().toString(), MVCActivity.this);\n            }\n        });\n    }\n\n\n    public void loginSuccess(){\n        tvResult.setText("登录结果：登录成功");\n    }\n\n    public void loginFail(){\n        tvResult.setText("登录结果：登录失败");\n    }\n\n}\n\n')])])]),a("p",[a("strong",[t._v("Controller代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class MVCController {\n\n    MVCModel mvcModel;\n\n    public MVCController() {\n        mvcModel = new MVCModel();\n    }\n\n    public void login(String account, String pwd, MVCActivity loginActivity) {\n        mvcModel.login(account, pwd, loginActivity);\n    }\n}\n\n")])])]),a("p",[a("strong",[t._v("Model代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MVCModel {\n\n    public void login(String account, String pwd, MVCActivity loginActivity){\n\n        if (account == null || account.length()==0) {\n            loginActivity.loginFail();\n        }\n\n        if (pwd == null || pwd.length()==0) {\n            loginActivity.loginFail();\n        }\n\n\n        if ("user123".equals(account) && "pwd123".equals(pwd)){\n            loginActivity.loginSuccess();\n        }\n\n    }\n\n}\n')])])]),a("h3",{attrs:{id:"实现代码说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现代码说明"}},[t._v("#")]),t._v(" 实现代码说明")]),t._v(" "),a("p",[t._v("在Activity中监听登录按钮的事件，接收到事件之后，调用Controller的登录方法处理登录逻辑，在Controller的登录方法中调用Model请求网络数据（这里是模拟）判断是否登录成功，Model拿到登录结果后，调用Activity的方法刷新页面数据，展示登录结果。")]),t._v(" "),a("h3",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("p",[t._v("优点：通过划分模块的方式，将系统分成了3个模块，视图层，业务层和数据层。 代码开发实现不再是只在一个代码文件中，一定程度便于程序开发。")]),t._v(" "),a("p",[t._v("缺点：但是三个模块之间还存在很强的耦合关系。 不利于业务需求的更变和代码维护工作。")]),t._v(" "),a("h2",{attrs:{id:"mvp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvp"}},[t._v("#")]),t._v(" MVP")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yutian_9065/img/raw/master/img/202302061539762.png",alt:"image-20230206153920702"}})]),t._v(" "),a("p",[t._v("MVP架构是基于MVC的改进，将MVC的中Controller独立出来作为Presenter。 xml和Activity还是作为视图层， 视图层接收到页面数据，调用Presenter进行业务逻辑处理，Presenter调用Model进行数据处理，Model回传数据给Presenter，Presenter回传数据给View。数据的回传通过接口回调的方式来实现。")]),t._v(" "),a("p",[a("strong",[t._v("代码结构")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yutian_9065/img/raw/master/img/202302061544339.png",alt:"image-20230206154424284"}})]),t._v(" "),a("p",[a("strong",[t._v("IModel接口代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public interface IModel {\n    public boolean login(String account, String pwd);\n}\n\n")])])]),a("p",[a("strong",[t._v("IView接口代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public interface IView {\n    public void loginSuccess();\n    public void loginFail();\n}\n\n")])])]),a("p",[a("strong",[t._v("Activity代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MVPActivity extends AppCompatActivity implements IView {\n\n    TextView tvResult;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n\n        tvResult = findViewById(R.id.tv_result);\n\n        TextView tvAccount = findViewById(R.id.tv_account);\n        TextView tvPwd = findViewById(R.id.tv_pwd);\n        Button btnLogin = findViewById(R.id.btn_login);\n\n        MVPPresenter presenter = new MVPPresenter();\n        presenter.setiView(this);\n        btnLogin.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                presenter.login(tvAccount.getText().toString(), tvPwd.getText().toString());\n            }\n        });\n    }\n\n    public void loginSuccess() {\n        tvResult.setText("登录结果：登录成功");\n    }\n\n    public void loginFail() {\n        tvResult.setText("登录结果：登录失败");\n    }\n}\n')])])]),a("p",[a("strong",[t._v("Model代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MVPModel implements IModel {\n    public boolean login(String account, String pwd) {\n\n        if (account == null || account.length() == 0) {\n            return false;\n        }\n\n        if (pwd == null || pwd.length() == 0) {\n            return false;\n        }\n\n\n        if ("user123".equals(account) && "pwd123".equals(pwd)) {\n            return true;\n\n        }\n        return false;\n    }\n}\n')])])]),a("p",[a("strong",[t._v("Presenter代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class MVPPresenter {\n\n    MVPModel model;\n\n    public MVPPresenter() {\n        model = new MVPModel();\n    }\n\n    IView iView;\n\n    public void setiView(IView iView) {\n        this.iView = iView;\n    }\n\n    public void login(String account, String pwd) {\n        boolean loginResult = model.login(account, pwd);\n\n        if (loginResult){\n            iView.loginSuccess();\n        }else {\n            iView.loginFail();\n        }\n    }\n}\n")])])]),a("h3",{attrs:{id:"实现代码说明-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现代码说明-2"}},[t._v("#")]),t._v(" 实现代码说明")]),t._v(" "),a("p",[t._v("定义了两个接口，IView和IModel, Activity和Model分别实现了这两个接口。 在Presenter中持有这两个实例。Presenter调用Model处理数据后，通过Iview的接口方法回调给Activity刷新页面。")]),t._v(" "),a("h3",{attrs:{id:"优缺点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点-2"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("p",[t._v("从上面的代码可以看到，三个模块之间的通信是通过接口实现的，在实际开发，定义的接口和方法会非常多。 导致很简单的一个页面功能也需要实现多个接口和方法。")]),t._v(" "),a("p",[t._v("优点就是通过Presenter，把MVC中的Controller代码抽出来了，并且Presenter作为View和Model通信的桥梁，完成了Model和View的解耦。")]),t._v(" "),a("h2",{attrs:{id:"mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yutian_9065/img/raw/master/img/202302071024407.png",alt:"image-20230207102411342"}})]),t._v(" "),a("p",[t._v("MVVM在MVP的基础上加入了双向绑定，使View能够感知ViewModel中的数据变化，ViewModel能够感知View数据的变化。")]),t._v(" "),a("p",[a("strong",[t._v("代码结构")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yutian_9065/img/raw/master/img/202302071029825.png",alt:"image-20230207102912754"}})]),t._v(" "),a("p",[a("strong",[t._v("xml代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<?xml version="1.0" encoding="utf-8"?>\n<layout xmlns:android="http://schemas.android.com/apk/res/android">\n\n    <data>\n\n        <variable\n            name="viewModel"\n            type="com.domain.android.study.notes.architecture.mvvm.MVVMViewModel" />\n\n    </data>\n\n    <LinearLayout\n        xmlns:android="http://schemas.android.com/apk/res/android"\n        android:id="@+id/ll_gallery_outer"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        android:orientation="vertical">\n\n        <TextView\n            android:id="@+id/tv_result"\n            android:layout_width="wrap_content"\n            android:layout_height="wrap_content"\n            android:text="@{viewModel.result}"\n            android:layout_gravity="center" />\n\n        <EditText\n            android:id="@+id/tv_account"\n            android:layout_width="match_parent"\n            android:layout_marginLeft="16dp"\n            android:layout_marginRight="16dp"\n            android:layout_height="40dp"\n            android:hint="输入用户名"\n            android:gravity="center"\n            android:text="@={viewModel.account}"\n\n            android:layout_gravity="center"\n            android:layout_marginTop="20dp" />\n\n        <EditText\n            android:id="@+id/tv_pwd"\n            android:layout_width="match_parent"\n            android:layout_marginLeft="16dp"\n            android:layout_marginRight="16dp"\n            android:layout_height="40dp"\n            android:hint="输入密码"\n            android:text="@={viewModel.pwd}"\n            android:gravity="center"\n            android:layout_gravity="center" />\n\n        <Button\n            android:id="@+id/btn_login"\n            android:layout_width="match_parent"\n            android:layout_marginLeft="16dp"\n            android:layout_marginRight="16dp"\n            android:layout_height="40dp"\n            android:text="登录"\n            android:gravity="center"\n            android:layout_gravity="center" />\n\n\n    </LinearLayout>\n</layout>\n')])])]),a("p",[a("strong",[t._v("Activity代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class MVVMActivity extends AppCompatActivity {\n\n    MVVMViewModel viewModel;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        ActivityLoginBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_login);\n        viewModel = ViewModelProviders.of(this).get(MVVMViewModel.class);\n        binding.setVariable(BR.viewModel, viewModel);\n        binding.setLifecycleOwner(this);\n        binding.btnLogin.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                viewModel.login();\n            }\n        });\n\n    }\n\n}\n")])])]),a("p",[a("strong",[t._v("ViewModel代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MVVMViewModel  extends ViewModel {\n\n    public ObservableField<String> account = new ObservableField<>("");\n    public ObservableField<String> pwd = new ObservableField<>("");\n    public ObservableField<String> result = new ObservableField<>("");\n\n    MVVMModel mvvmModel;\n    public MVVMViewModel() {\n         mvvmModel = new MVVMModel();\n    }\n\n    public void login(){\n        boolean loginResult = mvvmModel.login(account.get(), pwd.get());\n        result.set(loginResult ? "登录结果：成功" :"登录结果：失败");\n    }\n\n}\n')])])]),a("p",[a("strong",[t._v("Model代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class MVVMModel {\n    public boolean login(String account, String pwd) {\n        if (account == null || account.length() == 0) {\n            return false;\n        }\n\n        if (pwd == null || pwd.length() == 0) {\n            return false;\n        }\n        if ("user123".equals(account) && "pwd123".equals(pwd)) {\n            return true;\n        }\n        return false;\n    }\n}\n')])])]),a("p",[a("strong",[t._v("注意")])]),t._v(" "),a("p",[t._v("在本例MVVM架构实现中，用到了Android提供的data binding这个数据双向绑定框架。需要在APP模块的gralde文件中添加以下配置开启：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" android {\n ...\n dataBinding {\n        enabled true\n    }\n  ...\n    }\n")])])]),a("h3",{attrs:{id:"实现代码说明-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现代码说明-3"}},[t._v("#")]),t._v(" 实现代码说明")]),t._v(" "),a("p",[t._v("通过Android提供的数据双向绑定库data binding 将Acitvity/xml视图层与ViewModel绑定。在xml布局文件中，通过"),a("code",[t._v("@{}")]),t._v("来表示单向绑定或者"),a("code",[t._v("@={}")]),t._v("来表示双向绑定。Activity接受到视图层的登录点击事件后，调用ViewModel处理登录业务逻辑，ViewModel通过双向数据绑定拿到到视图层输入的账号密码数据，调用Model处理数据，Model处理数据后，回传给ViewModel, ViewModel的数据改变，View感知后刷新页面。")]),t._v(" "),a("p",[a("strong",[t._v("注意")])]),t._v(" "),a("p",[t._v("data binding通过观察者模式实现。 内部具体实现也是通过调用notify通知数据变化给观察者，notify调用了观察者实现的接口方法。")]),t._v(" "),a("h3",{attrs:{id:"优缺点-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点-3"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("p",[t._v("优点：经过数据双向绑定之后，我们不在需要想MVP中写那么多接口回调方法区实现视图层和业务层的交互。业务层也不再持有视图层的引用。")]),t._v(" "),a("p",[t._v("缺点：通过这种方式进行数据双向绑定后，xml中会多出一些标签、表达式、甚至和业务有点的简单计算代码。这不利于业务的逻辑的查看。并且由于双向绑定是data binding实现的。在这个过程中， 如果出现bug导致数据没有被感知改变，不方便排错，因为xml不能debug调试。")]),t._v(" "),a("h1",{attrs:{id:"_03-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-总结"}},[t._v("#")]),t._v(" 03 总结")]),t._v(" "),a("p",[t._v("MVC、MVP、MVVM大体上都是把系统划分成3个模块：视图层、业务层、数据层。 但是他们的通信方式、数据流动方向不一致，形成了不同的架构。 其后面产生的架构都是为了更好的解耦，解决已有架构的不足。每个架构都有自己的优缺点，"),a("strong",[t._v("没有最好的架构，只有最合适的架构。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);